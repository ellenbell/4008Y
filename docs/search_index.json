[["index.html", "Introduction to Data Handling - 4008Y Chapter 1 Welcome to the Data Handling Workbook 1.1 Data Handling learning objectives 1.2 Teaching layout for Data Handling 1.3 How to use this workbook 1.4 Why is data handling important and why are we teaching it in R?", " Introduction to Data Handling - 4008Y Dr Ellen Bell 2022-08-01 Chapter 1 Welcome to the Data Handling Workbook 1.1 Data Handling learning objectives Introduction to Data Handling is a ‘sub-module’ that will run throughout your first year as part of the BIO-4008Y Skills for Biologists module. Here we aim to teach you the fundamentals of how to collect and organise data in a clean and sensible format and how to correctly visualise and describe data. The platform we will be using to manage, manipulate and analyse data is RStudio Cloud. This is a cloud based interface utilises the programming language R. Over the course of the next few weeks you will start to learn fundamentals of this language and its application in RStudio Cloud. 1.2 Teaching layout for Data Handling The Data Handling sub-module aims to cover fundamentals of data organisation and visualisation in semester 1 and in semester 2 will move onto some slightly more advanced data visualisation skills, descriptive statistics and data interpretation. Towards the end of the module we will briefly touch on inferential statistics, but this will be a very brief introduction. In semester 1 you will have either a lecture or a 1 hour workshop each week; Semester 1 Lectures - Weeks; 2,3,6,7,9,10 Semester 1 Workshops - Weeks; 4,8,11 And then in semester 2 you will have a lecture every week up to week 8 and a 2 hour workshop every other week; Semester 2 Lectures - Weeks; 1,2,3,4,5,6,7,8 Semester 2 Workshops - Weeks; 2,4,6,8 In addition to the in person taught material, you will be expected to complete a chapter of this workbook every week. 1.3 How to use this workbook Each week of taught material is accompanied by a chapter in this workbook and you will be expected read through and complete any exercises in your own time. Each chapter should take no more then an hour to complete and in many cases will take much less time. We will aim to set aside 10 minutes at the end of each lecture to cover any potential problems you may be having, so if you get stuck do use this time to ask for help. 1.4 Why is data handling important and why are we teaching it in R? It is a common misconception that to be a good biologist you need to ‘know’ the mechanics of how life works. Questions like; “How does a cell undergo respiration?” “How do kidneys filter blood?” “How do some plants fix nitrogen?” and “How do honey bees communicate the location and quantity of resources to each other?” spring to mind. While these questions are important, they are also, now, fairly well understood. But how did biologists come to their understanding of these mechanisms? The answer to this lies in data. Good science is based on empirical observations and these observations should be reliably collected and reproducible. Exploration of theories through observations and experimentation leads to the collection of data and analysis and interpretation of data feeds into the bedrock of our understanding of the principals of how life works, i.e. the biological sciences. Hopefully you can see why data handling, analysis and interpretation are important. So why are we teaching you how to handle data using R? To many of you the use of programming languages, such as R, will be new. However if you can get into the habit of manipulating and analysing data in R you will be well set on the path to becoming an efficient and effective data analyst. This being confident with data is a key skill in the sciences and will serve you well in many career paths. In addition, knowledge and experience of programming languages such as R are fast becoming key skills in their own right in the science, industry, government and beyond. In terms of the use of R for data handling and analysis, you may also have noticed that the term reproducible recurring on this page. In the same way that your methods of data collection should be conducted and recorded in such a way that they may be reproduced by others, your data manipulation and analysis must also be conducted and recorded so as to be reproducible. Using R within the RStudio Cloud interface (we will come back to this in Chapter 2) makes it easy to record your data manipulation and analysis workflow and, if done well, makes it very easy for others to see and repeat what you have done. So hopefully I have convinced you that data handling, analysis and R are all worthwhile skills to cultivate. We will spend some time in lectures discussing this as well. But for now take a look at Chapter 2. Happy coding! "],["introduction-to-r-and-rstudio-cloud---week-2.html", "Chapter 2 Introduction to R and RStudio Cloud - Week 2 2.1 What is R and RStudio Cloud? 2.2 Creating your first RStudio Cloud Project 2.3 Entering commands directly into the consol 2.4 Sending commands down to the console from an R script", " Chapter 2 Introduction to R and RStudio Cloud - Week 2 You should aim to complete this chapter in week 2. 2.1 What is R and RStudio Cloud? So hopefully you have read through Chapter 1, where we briefly discussed how we would be using R and the RStudio Cloud interface in this module. But what really is R and what is the difference between R and RStudio Cloud? Essentially R is a programming language that is commonly used in statistical computing, data handling, data visualisation and data analysis. On the other hand RStudio Cloud is the cloud based interface of a piece of software called RStudio (we wont be using the non cloud based RStudio so wont explore this software further here). RStudio Cloud uses the R programming language but has a nice user friendly interface and is a great tool for learning how to conduct analysis in R. We are using the cloud based version of RStudio because it means that no one has to worry about installing extra software on their own computers and that everyone will be working with the same software versions. You will all need to create your own free accounts on RStudio Cloud, but first have a look at the short video below introducing you to the interface. A short video introducing you to RStudio Cloud Now that you’ve watched the video, create your own RStudio Cloud account. 2.2 Creating your first RStudio Cloud Project Once you have created an RStudio Cloud account you should be presented with this window printscreen Under Spaces go to Your Workspace and under Projects create a New Project &gt; New R studio Project. printscreen Lets name this project Testing_R, notice that I have no spaces in my project name, instead I have used an underscore, there are a number of good habits you should try and adopt when project or file naming and not including spaces is one of them, we will go over this in more depth in lectures. You can rename your project by clicking on Untitled Project at the top of the window, and typing in your new project name. printscreen You will see that your new project has three pannels with tabs showing the Console, Environment and Files for your project. printscreen 2.3 Entering commands directly into the consol Lets start by playing with some commands in the console. Type or copy and paste the simple calculation (or command) shown below, into the console. Your text should appear next to the &gt; symbol. Press Enter on your keyboard, this will instruct R to run the command. 5 + 9 The two final lines of your output should look like this: &gt; 5 + 9 [1] 14 So… your initial command 5 + 9 is shown after the &gt;, symbol and the resulting output from R is shown after [1]. Don’t worry too much about the syntax of &gt; and [1] here. You can think of &gt; as meaning that R is ready to receive a command and [1] as R telling you that the answer to the first part of your question is here (in this case 14). Try out some other commands… What happens when you input the following commands? 362 * 12 55 / 5 (40 / 990) * 100 4^2 See if you can work out what 30% of 735 is using the R console 2.4 Sending commands down to the console from an R script I have already mentioned the reproducibility factor as an advantage of using RStudioCloud. This is because you can record and run all of your commands from an R script within RStudioCloud. This means that you have a written record of your analysis workflow, what you did to your data at which stage, and you can do all of this without altering the original data files! This is super important because if means that if you revisit your work in a few weeks/months/years you can see exactly what you did AND if someone else needs to rerun any of your analysis or use your workflow on some other data, they can! So lets go about setting up your new script. You currently have three panels in RStudioCloud. If you go to file &gt; New File &gt; R Script a new panel will open. print screen print screen This new panel is essentially a text document where you can write your commands into a script and then send them down to the console when you want to run them. Lets have a play. Copy the below into your new R script. 362 * 12 55 / 5 (40 / 990) * 100 4^2 These are all commands you have run before but now if you save your script file you will have a text based document with your progress saved. It doesn’t make a huge amount of sense to do this now because these are just a random set of equations and we are just playing with the interface, but you could if you wanted to. Ok, so now we are ready to execute our commands. You can do this with each equation individually, line by line or you can run the whole script. To run your script line by line, place your cursor on the line you wish to run and you can either; Click on the run button on the top right of the script panel Press ctrl + Enter (or Command + Enter on mac) Or if you wish to run the entire script you can either; Manually Highlight the script and click the run button or press ctrl + Enter (or Command + Enter on mac) Press ctrl + A (or Command + A on mac) and then click the run button or press ctrl + Enter (or Command + Enter on mac) Well Done! You have started writing and running simple code. But R is capable of doing so much more then simple calculations. Next week in Chapter 3 we will explore how we can create objects, and use packages and functions. "],["objects-packages-and-functions---week-3.html", "Chapter 3 Objects, Packages and Functions - Week 3 3.1 Creating objects 3.2 Installing and calling packages 3.3 Using functions 3.4 What do I do if I get an error message?", " Chapter 3 Objects, Packages and Functions - Week 3 If you have the code it is possible to do pretty much whatever you like with your data in R. However, why reinvent the wheel trying to write your own complex scripts, when a lot of very clever coders have already written collections of scripts stored in packages that will do the job for you. As the course progresses you will use a range of packages that contain functions. Functions can be thought of as a small piece of code that is designed to perform a set task. For example the data visualisation package (which you will become very familiar with as the course progresses) ggplot2 contains ranges of functions which allow you to define how your plot or graph will look, for example geom_bar is a function within the ggplot2 package that contains the instructions required to build a bar chart. 3.1 Creating objects 3.2 Installing and calling packages 3.3 Using functions 3.4 What do I do if I get an error message? "],["directories-and-data-frames---week-4---workshop-1.html", "Chapter 4 Directories and data frames - Week 4 - Workshop 1 4.1 Understanding directories and their structure 4.2 Tips and tricks for file naming and version control 4.3 Setting up your R workspace 4.4 Creating your first data frame using tibble 4.5 Playing with some functions", " Chapter 4 Directories and data frames - Week 4 - Workshop 1 This week we dont have lectures but we do have an in person workshop. The section to complete this week may be a little more chunky then unusual, complete what you can during the workshop and then finish it off in your own time. Do make use of the demonstrators if any of the exercises so far haven’t made sense. 4.1 Understanding directories and their structure 4.2 Tips and tricks for file naming and version control 4.3 Setting up your R workspace 4.4 Creating your first data frame using tibble 4.5 Playing with some functions "],["reading-week---week-5.html", "Chapter 5 Reading week - Week 5", " Chapter 5 Reading week - Week 5 There will be no new material released this week, we recommend that you use this time to catchup on any former sections of the workbook that you may not have had a go at yet. "],["keep-it-clean-keep-it-tidy---week-6.html", "Chapter 6 Keep it clean! Keep it tidy! - Week 6 6.1 Setting up your workspace 6.2 Importing data 6.3 Initial observations 6.4 Clean and tidy data makes the world go round", " Chapter 6 Keep it clean! Keep it tidy! - Week 6 6.1 Setting up your workspace 6.2 Importing data 6.3 Initial observations 6.4 Clean and tidy data makes the world go round "],["initial-observations---week-7.html", "Chapter 7 Initial Observations - Week 7 7.1 Getting the measure of your data 7.2 Exploring a little further 7.3 Your first plot in R", " Chapter 7 Initial Observations - Week 7 7.1 Getting the measure of your data 7.2 Exploring a little further 7.3 Your first plot in R "],["lost-the-plot-start-to-visualise-data---week-8---workshop-2.html", "Chapter 8 Lost the plot? Start to visualise data - Week 8 - Workshop 2 8.1 Relationships and differences 8.2 Introduction to ggplot2 8.3 Some different plots", " Chapter 8 Lost the plot? Start to visualise data - Week 8 - Workshop 2 This is our second workshop hopefully you are gaining some confidence with R and working with data. 8.1 Relationships and differences 8.2 Introduction to ggplot2 8.3 Some different plots "],["make-them-pretty---week-9.html", "Chapter 9 Make them pretty - Week 9", " Chapter 9 Make them pretty - Week 9 "],["make-them-pretty-continued---week-10.html", "Chapter 10 Make them pretty continued - Week 10", " Chapter 10 Make them pretty continued - Week 10 "],["writing-a-script-from-scratch---week-11---workshop-3.html", "Chapter 11 Writing a script from “scratch” - Week 11 - Workshop 3", " Chapter 11 Writing a script from “scratch” - Week 11 - Workshop 3 "],["quiz-time---week-12.html", "Chapter 12 Quiz time - Week 12", " Chapter 12 Quiz time - Week 12 "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
